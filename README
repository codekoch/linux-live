# LiveLinux
==============

Use this set of scripts to turn your existing preinstalled Linux
distribution into a Live Kit (formely known as Live CD or Live USB Stick).
Make sure to extract and use it on a posix-compatible filesystem,
since it creates some (sym)links and such.

## Get started
Usage: 

* Store Linux Live kit in a directory which is not going to be included
  in your live distro, else it would be copied to it. Best practice is to
  make a directory such as /a and put these scripts there.
  Be warned, if you put it to /tmp, some distros may erase it on reboot.

>cd <directory mentioned above>  
>git clone https://github.com/codekoch/livelinux
>cd livelinux 

* Before you start building your Kit, edit the file ./config (nano ./config)
  Most importantly change the LIVEKITNAME variable and the LIVEKITDATA path.

* Make sure your kernel is in /boot/vmlinuz or change the path in ./config
  Your kernel must support squashfs and aufs. Debian Jessie's kernel does.

* You may also wish to replace boot graphics in ./bootfiles/bootlogo.png
  and reorganize isolinux.cfg to fit your needs (when editing the file,
  keep all paths in /boot/, it will be rellocated during LiveKit creation)

* Linux Live Kit comes with precompiled static binaries in ./initramfs
  directory. Those may be outdated but will work. You may replace them
  by your own statically linked binaries, if you know how to compile them.

* If you plan to boot your Live Kit from CD, you need to recompile
  syslinux.bin else it won't be able to boot your Live Kit from directory
  LIVEKITNAME. There is a script prepared for you which will handle all
  of that. Simply go to directory ./tools/ and run isolinux.bin.update ...
  it will update ./bootfiles/isolinux.bin automatically by downloading
  isolinux sources, patching them using your actual LIVEKITNAME and
  recompiling. This step is not needed if you plan to boot from USB only.

* Make sure you have enough RAM on the given LIVEKITDATA path 
  since LiveKit will store lots of data there. If you are low on RAM,
  make sure LIVEKITDATA is a regular on-disk directory.

* When done, run the ./build script to create your Live Kit

>./build.sh

* The following packages will be installed if they are not available:
  - squashfs-tools
  - genisoimage or mkisofs
  - aufs-dkms
  - zip

* After the successful build you will find your livelinux system under the path
  given by LIVEKITDATA
 
* to create a bootable device you can use the script createBootDevice.sh under scripts
 
